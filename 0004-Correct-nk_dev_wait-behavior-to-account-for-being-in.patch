From 6dae91a1f0488cf8f5ebca7ab00e4fcb288afc40 Mon Sep 17 00:00:00 2001
From: Peter Dinda <pdinda@northwestern.edu>
Date: Wed, 19 Apr 2017 15:57:57 -0500
Subject: [PATCH 04/20] Correct nk_dev_wait behavior to account for being in
 interrupt context

---
 src/nautilus/dev.c    | 10 +++++++++-
 src/nautilus/netdev.c |  4 +++-
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/src/nautilus/dev.c b/src/nautilus/dev.c
index 372fda4..9b9ed24 100644
--- a/src/nautilus/dev.c
+++ b/src/nautilus/dev.c
@@ -133,7 +133,15 @@ struct nk_dev *nk_dev_find(char *name)
 
 void nk_dev_wait(struct nk_dev *d)
 {
-    nk_thread_queue_sleep(d->waiting_threads);
+    if (get_cpu()->interrupt_nesting_level) { 
+	// We are in an interrupt context, and 
+	// we cannot wait...
+	return;
+    } else {
+	// We are in a thread context and we will
+	// put ourselves to sleep
+	nk_thread_queue_sleep(d->waiting_threads);
+    }
 }
 
 void nk_dev_signal(struct nk_dev *d)
diff --git a/src/nautilus/netdev.c b/src/nautilus/netdev.c
index 4c9c501..43a2389 100644
--- a/src/nautilus/netdev.c
+++ b/src/nautilus/netdev.c
@@ -144,7 +144,9 @@ int nk_net_dev_send_packet(struct nk_net_dev *dev,
 		    return -1;
 		} else {
 		    DEBUG("Packet launch started, waiting for completion\n");
-		    while (!completion) {}
+		    while (!completion) {
+			nk_dev_wait((struct nk_dev *)dev);
+		    }
 		    return 0;
 		}
 	    }
-- 
1.9.1

