From 4d0e53b4f236e9ae8eaa3db9fe432ce002757d0b Mon Sep 17 00:00:00 2001
From: Peter Dinda <pdinda@northwestern.edu>
Date: Wed, 19 Apr 2017 15:11:44 -0500
Subject: [PATCH 03/20] Add try-lock capability for spinlocks

---
 include/nautilus/spinlock.h | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/include/nautilus/spinlock.h b/include/nautilus/spinlock.h
index 29670c5..45a69ff 100644
--- a/include/nautilus/spinlock.h
+++ b/include/nautilus/spinlock.h
@@ -54,7 +54,14 @@ spin_lock (volatile spinlock_t * lock)
     NK_PROFILE_EXIT();
 }
 
-static uint8_t
+// returns zero on successful lock acquisition, -1 otherwise
+static inline int
+spin_try_lock(volatile spinlock_t *lock)
+{
+    return  __sync_lock_test_and_set(lock,1) ? -1 : 0 ;
+}
+
+static inline uint8_t
 spin_lock_irq_save (volatile spinlock_t * lock)
 {
     uint64_t rflags = read_rflags();
@@ -66,6 +73,7 @@ spin_lock_irq_save (volatile spinlock_t * lock)
     return flags;
 }
 
+
 void
 spin_lock_nopause (volatile spinlock_t * lock);
 
@@ -80,7 +88,7 @@ spin_unlock (volatile spinlock_t * lock)
     NK_PROFILE_EXIT();
 }
 
-static void
+static inline void
 spin_unlock_irq_restore (volatile spinlock_t * lock, uint8_t flags)
 {
     __sync_lock_release(lock);
@@ -98,6 +106,7 @@ spin_unlock_irq_restore (volatile spinlock_t * lock, uint8_t flags)
 #define NK_LOCK_T         nk_ticket_lock_t
 #define NK_LOCK_INIT(l)   nk_ticket_lock_deinit(l)
 #define NK_LOCK(l)        nk_ticket_lock(l)
+#define NK_TRY_LOCK(l)    nk_ticket_trylock(l)
 #define NK_UNLOCK(l)      nk_ticket_unlock(l)
 #define NK_LOCK_DEINIT(l) nk_ticket_lock_deinit(l)
 #else
@@ -106,6 +115,7 @@ spin_unlock_irq_restore (volatile spinlock_t * lock, uint8_t flags)
 #define NK_LOCK_T         spinlock_t
 #define NK_LOCK_INIT(l)   spinlock_init(l)
 #define NK_LOCK(l)        spin_lock(l)
+#define NK_TRY_LOCK(l)    spin_try_lock(l)
 #define NK_UNLOCK(l)      spin_unlock(l)
 #define NK_LOCK_DEINIT(l) spinlock_deinit(l)
 #endif
-- 
1.9.1

